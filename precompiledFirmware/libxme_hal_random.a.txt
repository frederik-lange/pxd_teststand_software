In archive C:/BelleII/devenv/workspace/kekSVN-firmware-2/target/libxme_hal_random.a:

random_arch.c.obj:     file format elf32-littlearm
rw-rw-rw- 0/0  31788 Jul 30 19:07 2021 random_arch.c.obj
architecture: arm, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 5000000: [Version5 EABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000068  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000009c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00000000  00000000  0000009c  2**2
                  ALLOC
  3 .debug_abbrev 000000f9  00000000  00000000  0000009c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000026c  00000000  00000000  00000195  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_line   000004e1  00000000  00000000  00000401  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  6 .debug_macinfo 000060a2  00000000  00000000  000008e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    00000114  00000000  00000000  00006984  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000000da  00000000  00000000  00006a98  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  9 .debug_pubtypes 0000009c  00000000  00000000  00006b72  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 10 .debug_aranges 00000020  00000000  00000000  00006c0e  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
 11 .debug_str    000004ac  00000000  00000000  00006c2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000002b  00000000  00000000  000070da  2**0
                  CONTENTS, READONLY
 13 .ARM.attributes 00000031  00000000  00000000  00007105  2**0
                  CONTENTS, READONLY
 14 .debug_frame  000000a4  00000000  00000000  00007138  2**2
                  CONTENTS, RELOC, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 random_arch.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_macinfo	00000000 .debug_macinfo
00000000 l       .bss	00000000 xme_core_config
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000004       O *COM*	00000004 xme_core_log_logCallback
00000000 g     F .text	00000010 xme_hal_random_init
00000010 g     F .text	0000000a xme_hal_random_fini
0000001c g     F .text	00000010 xme_hal_random_registerThread
0000002c g     F .text	0000000a xme_hal_random_deregisterThread
00000038 g     F .text	00000010 xme_hal_random_rand
00000048 g     F .text	0000001e xme_hal_random_randRange



Disassembly of section .text:

00000000 <xme_hal_random_init>:
/******************************************************************************/
/***   Implementation                                                       ***/
/******************************************************************************/
xme_core_status_t
xme_hal_random_init()
{
   0:	b480      	push	{r7}
   2:	af00      	add	r7, sp, #0
	// TODO: See ticket #828
	return XME_CORE_STATUS_SUCCESS;
   4:	f04f 0300 	mov.w	r3, #0
}
   8:	4618      	mov	r0, r3
   a:	46bd      	mov	sp, r7
   c:	bc80      	pop	{r7}
   e:	4770      	bx	lr

00000010 <xme_hal_random_fini>:

void
xme_hal_random_fini()
{
  10:	b480      	push	{r7}
  12:	af00      	add	r7, sp, #0
	// Nothing to do
}
  14:	46bd      	mov	sp, r7
  16:	bc80      	pop	{r7}
  18:	4770      	bx	lr
  1a:	bf00      	nop

0000001c <xme_hal_random_registerThread>:

xme_core_status_t
xme_hal_random_registerThread()
{
  1c:	b480      	push	{r7}
  1e:	af00      	add	r7, sp, #0
	// TODO: See ticket #829
	return XME_CORE_STATUS_SUCCESS;
  20:	f04f 0300 	mov.w	r3, #0
}
  24:	4618      	mov	r0, r3
  26:	46bd      	mov	sp, r7
  28:	bc80      	pop	{r7}
  2a:	4770      	bx	lr

0000002c <xme_hal_random_deregisterThread>:

void
xme_hal_random_deregisterThread()
{
  2c:	b480      	push	{r7}
  2e:	af00      	add	r7, sp, #0
	// Nothing to do
}
  30:	46bd      	mov	sp, r7
  32:	bc80      	pop	{r7}
  34:	4770      	bx	lr
  36:	bf00      	nop

00000038 <xme_hal_random_rand>:

uint16_t
xme_hal_random_rand()
{
  38:	b480      	push	{r7}
  3a:	af00      	add	r7, sp, #0
	// TODO: See ticket #830
	return 0;
  3c:	f04f 0300 	mov.w	r3, #0
}
  40:	4618      	mov	r0, r3
  42:	46bd      	mov	sp, r7
  44:	bc80      	pop	{r7}
  46:	4770      	bx	lr

00000048 <xme_hal_random_randRange>:

uint16_t
xme_hal_random_randRange(uint16_t min, uint16_t max)
{
  48:	b480      	push	{r7}
  4a:	b083      	sub	sp, #12
  4c:	af00      	add	r7, sp, #0
  4e:	4602      	mov	r2, r0
  50:	460b      	mov	r3, r1
  52:	80fa      	strh	r2, [r7, #6]
  54:	80bb      	strh	r3, [r7, #4]
	XME_ASSERT_RVAL(max >= min, max);

	// TODO: See ticket #831
	return 0;
  56:	f04f 0300 	mov.w	r3, #0
}
  5a:	4618      	mov	r0, r3
  5c:	f107 070c 	add.w	r7, r7, #12
  60:	46bd      	mov	sp, r7
  62:	bc80      	pop	{r7}
  64:	4770      	bx	lr
  66:	bf00      	nop
